
import { StatusForm } from "../models/StatusForm";
import { CHAT_FIELD_ID } from "./constants";
import { fetchCardByPhone } from "./fetchCardByPhone";
import createDebug from 'debug';
const debug = createDebug('bot:about_command');
const SUCCESS_TEXT = `‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞!
–° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –≤—ã–ø—É—Å–∫–Ω—ã—Ö –ª–µ–Ω—Ç, –æ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ –¥–æ—Å—Ç–∞–≤–∫–∏. –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å –æ:

* –ü–µ—Ä–µ—Ö–æ–¥–µ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞.
* –û–∂–∏–¥–∞–µ–º—ã—Ö —Å—Ä–æ–∫–∞—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ.

üîç –ß—Ç–æ –¥–∞–ª—å—à–µ?
–ú—ã –ø—Ä–∏–ª–æ–∂–∏–º –≤—Å–µ —É—Å–∏–ª–∏—è, —á—Ç–æ–±—ã –≤–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –≤ —Å—Ä–æ–∫. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫–∞–∑—É –∏–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É . –ê —Ç–∞–∫ –∑–¥–µ—Å—å –≤—ã —É–∑–Ω–∞–µ—Ç–µ  –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ üòâüëå –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!
–û–∂–∏–¥–∞–π—Ç–µ –∏ –º—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å¬†–æ¬†–∏–∑–º–µ–Ω–µ–Ω–∏—è—ÖüôÇ
`
export const setCardChatId = async (phone: string, chatId: string): Promise<StatusForm> => {

    const status: StatusForm = {
        error: true,
        text: ''
    }
    const card = await fetchCardByPhone(phone)

    if (!card) {
        status.text = '–ù–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å —Ñ–æ—Ä–º–∞—Ç!'
        return status
    }

    const url = `${process.env.TRELLO_API_URL}/cards/${card.id}/customField/${CHAT_FIELD_ID}/item?key=${process.env.TRELLO_API_KEY}&token=${process.env.TRELLO_API_TOKEN}`
    const body = { "value": { "text": chatId } }

    try {

        const response = await fetch(url, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(body)
        })

        debug(await response.text())

        status.error = false;
        status.text = SUCCESS_TEXT;
        return status

    } catch (e) {
        status.error = true;
        status.text = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–¥–Ω–µ–µ...'
        return  status
    }



}
